#!/bin/bash

# Function to check if a command exists
command_exists() {
  command -v "$1" >/dev/null 2>&1
}

# Ensure storage permission for Termux
termux-setup-storage

# Function to install packages using the package manager
install_package() {
  local package_name=$1
  if ! command_exists "$package_name"; then
    echo "Installing $package_name..."
    pkg install -y "$package_name"
  else
    echo "$package_name is already installed."
  fi
}

# Update and upgrade Termux packages
echo "Updating package repositories..."
pkg update -y
echo "Upgrading installed packages..."
pkg upgrade -y

# Install necessary packages
install_package cronie  # Install cronie for cron job functionality
install_package termux-api  # Install termux-api for sending SMS
install_package whiptail  # Install whiptail for user interface

# Create necessary directories and set permissions
mkdir -p ~/.cache/crontab
mkdir -p ~/bin

# Download send_sms.sh script to ~/bin/send_sms.sh
echo "Downloading send_sms.sh script..."
curl -s -o ~/bin/send_sms.sh https://raw.githubusercontent.com/robertneed20k/auto-goodmorning/main/send_sms.sh
chmod +x ~/bin/send_sms.sh

# Ensure ~/bin is in PATH
if [[ ":$PATH:" != *":$HOME/bin:"* ]]; then
  echo 'export PATH="$HOME/bin:$PATH"' >> ~/.bashrc
  export PATH="$HOME/bin:$PATH"
fi

# Define sms function and add alias in ~/.bashrc
setup_sms_command() {
  if ! grep -q "sms()" ~/.bashrc; then
    echo 'sms() { ~/bin/send_sms.sh; }' >> ~/.bashrc
    source ~/.bashrc
    echo "sms command alias/function added."
  else
    echo "sms command alias/function already exists."
  fi
}

# Setup sms command
setup_sms_command

# Display completion message
echo "Installation complete! Run 'sms' to configure and start the SMS sender."
